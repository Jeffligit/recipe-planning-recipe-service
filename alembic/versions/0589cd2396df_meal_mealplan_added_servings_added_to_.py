"""meal, mealplan added. servings added to recipes

Revision ID: 0589cd2396df
Revises: 0ff335ec09f1
Create Date: 2024-09-24 14:37:18.040103

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0589cd2396df'
down_revision: Union[str, None] = '0ff335ec09f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mealdates')
    op.alter_column('mealplans', 'createdOn',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('mealplans', 'lastUpdated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('meals', 'date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.add_column('recipes', sa.Column('servings', sa.Integer(), nullable=True))
    op.alter_column('recipes', 'rating',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('recipes', 'rating',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=True)
    op.drop_column('recipes', 'servings')
    op.alter_column('meals', 'date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('mealplans', 'lastUpdated',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('mealplans', 'createdOn',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.create_table('mealdates',
    sa.Column('mealplan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('servings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['mealplan_id'], ['mealplans.id'], name='mealdates_mealplan_id_fkey'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name='mealdates_recipe_id_fkey'),
    sa.PrimaryKeyConstraint('mealplan_id', 'recipe_id', name='mealdates_pkey')
    )
    # ### end Alembic commands ###
